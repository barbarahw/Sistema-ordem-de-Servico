/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Servidor.GUI;

import Controller.RequisicaoController;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import org.json.JSONObject;

/**
 *
 * @author bwosi
 */
public class TelaConexaoServidor extends javax.swing.JFrame {

    private ServerSocket serverSocket;
    private static final Set<String> usuariosConectados = Collections.synchronizedSet(new HashSet<>());
    private TelaInicialServidor telaInicialServidor;

    /**
     * Creates new form TelaConexaoServidor
     */
    public TelaConexaoServidor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPorta = new javax.swing.JLabel();
        txtPorta = new javax.swing.JTextField();
        btnIniciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblPorta.setText("Informe a porta que o servidor deve usar:");

        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(btnIniciar)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(lblPorta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIniciar)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        iniciarServidor(evt);
    }//GEN-LAST:event_btnIniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    private Socket esperaConexao() throws IOException {
        return serverSocket.accept();
    }

    private void iniciarServidor(java.awt.event.ActionEvent evt) {
        try {
            int porta = Integer.parseInt(txtPorta.getText());
            serverSocket = new ServerSocket(porta);
            javax.swing.JOptionPane.showMessageDialog(this, "servidor iniciado na porta " + porta, "Iniciado", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            telaInicialServidor = new TelaInicialServidor();
            telaInicialServidor.setVisible(true);
            
            new Thread(() -> {
                while (true) {
                    try {
                        Socket cliente = esperaConexao();
                        String identificador = cliente.getInetAddress().toString();
                        System.out.println("novo cliente conectado: " + identificador);
                        usuariosConectados.add(identificador);
                        javax.swing.SwingUtilities.invokeLater(() -> {
                            telaInicialServidor.atualizarLista(usuariosConectados);
                        });
                        new Thread(() -> {
                            try {
                                BufferedReader in = new BufferedReader(new InputStreamReader(cliente.getInputStream()));
                                PrintWriter out = new PrintWriter(cliente.getOutputStream(), true);

                                RequisicaoController controller = new RequisicaoController(usuariosConectados);
                                
                                String jsonRecebido;
                                while ((jsonRecebido = in.readLine()) != null) {
                                    
                                    System.out.println("JSON recebido: " + jsonRecebido);

                                    JSONObject requisicao = new JSONObject(jsonRecebido);
                                    JSONObject resposta = controller.processar(requisicao);
                                    String jsonResposta = resposta.toString();

                                    out.println(jsonResposta);
                                    System.out.println("JSON enviado: " + jsonResposta);
                                    
                                    
                                }

                            } catch (Exception e) {
                                System.out.println("Erro na comunicação com o cliente: " + e.getMessage());
                            }
                        }).start();

                        
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(this, e.getMessage(), "erro", JOptionPane.ERROR_MESSAGE);
                        break;
                    }
                }
            }).start();

        } catch (NumberFormatException ex) {
            System.out.println("Porta inválida");
        } catch (IOException ex) {
            System.out.println("Erro ao iniciar servidor: " + ex.getMessage());
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConexaoServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConexaoServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConexaoServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConexaoServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConexaoServidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciar;
    private javax.swing.JLabel lblPorta;
    private javax.swing.JTextField txtPorta;
    // End of variables declaration//GEN-END:variables
}
