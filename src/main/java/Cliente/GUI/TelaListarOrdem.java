/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Cliente.GUI;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author bwosi
 */
public class TelaListarOrdem extends javax.swing.JFrame {

    private DefaultListModel<String> listModel;

    private Socket socket;
    private PrintWriter output;
    private BufferedReader input;
    private String token;
    private String perfil;
    
    /**
     * Creates new form TelaListarOrdem
     */
    public TelaListarOrdem(Socket socket, PrintWriter output, BufferedReader input, String token, String perfil) {
        initComponents();
        this.socket = socket;
        this.input = input;
        this.output = output;
        this.token = token;
        this.perfil = perfil;
        
        String[] opcoes = {"pendente", "cancelada", "finalizada", "todas"};
        jComboBox1.setModel(new DefaultComboBoxModel<>(opcoes));
        
        listModel = new DefaultListModel<>();
        listaOrdem.setModel(listModel);
        jComboBox1.addActionListener(e -> atualizarLista());
    }

    private TelaListarOrdem() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaOrdem = new javax.swing.JList<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listaOrdem.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaOrdem);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnVoltar.setText("Voltar ao Menu");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVoltar)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnVoltar)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        
        if ("comum".equals(perfil)){
            MenuComum menuComum = new MenuComum(socket, output, input, token, perfil);
            menuComum.setVisible(true);
            this.setVisible(false);
        } else {
            MenuAdm menuAdm = new MenuAdm(socket, output, input, token, perfil);
            menuAdm.setVisible(true);
            this.setVisible(false);
        }
        
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    private void enviarJson(JSONObject json) {
        output.println(json.toString());
        System.out.println("JSON enviado: " + json.toString());
    }

    private JSONObject receberJson() {
        String resposta;
        try {
            resposta = input.readLine();
            JSONObject respostaJson = new JSONObject(resposta);
            System.out.println("JSON recebido: " + respostaJson.toString());
            return respostaJson;
        } catch (IOException ex) {
            Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

        return null;
    }
    
    private void atualizarLista(){
        String filtro = (String) jComboBox1.getSelectedItem();
        if (filtro == null) 
            return;
        try {
            JSONObject json = new JSONObject();
            json.put("operacao", "listar_ordens");
            json.put("filtro", filtro);
            json.put("token", token);
            
            enviarJson(json);
            JSONObject respostaJson = receberJson();
            
            listModel.clear();
            
            if (respostaJson.getString("status").equals("sucesso")){
                JSONArray ordens = respostaJson.getJSONArray("ordens");
                for (int i = 0; i<ordens.length(); i++){
                    JSONObject ordem = ordens.getJSONObject(i);
                    String linha = "#" + ordem.getInt("id") + "-" + ordem.getString("descricao") + "-" + ordem.getString("status");
                    listModel.addElement(linha);
                    
                }
                
            } else {
                listModel.addElement(respostaJson.getString("mensagem"));
            }
            
        } catch(Exception e){
            e.printStackTrace();
            listModel.clear();
            listModel.addElement("Erro ao atualiza a lista!");
        }
    }
    
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaListarOrdem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaListarOrdem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaListarOrdem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaListarOrdem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaListarOrdem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaOrdem;
    // End of variables declaration//GEN-END:variables
}
